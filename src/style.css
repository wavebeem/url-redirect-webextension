:root {
  --Color-ModalBackdrop: hsla(0, 0%, 100%, 0.75);
  --Color-Red: hsl(0, 80%, 45%);
  --Color-Link: #000;
  --Color-LinkHover: #777;
  --Color-BodyFG: #111;
  --Color-BodyBG: #f4f4f4;
  --Color-ButtonDisabledBG: hsla(240, 10%, 10%, 0.05);
  --Color-ButtonDisabledFG: #aaa;
  --Color-ButtonBG: hsla(240, 10%, 10%, 0.1);
  --Color-ButtonBGHover: hsla(240, 10%, 10%, 0.15);
  --Color-Separator: hsl(240, 10%, 90%);
  --Color-Border: hsl(240, 10%, 80%);
  --Color-BorderHover: hsl(240, 10%, 50%);
  --Color-Focus: hsl(210, 70%, 50%);
  --Color-FocusInner: white;
  --Color-FocusOutline: hsl(210, 100%, 80%);

  --Image-Checked: url(/img/checked.svg);

  --Rem-1-8: 0.125rem;
  --Rem-1-16: 0.0625rem;

  --Field-Height: 2rem;
  --Content-Width: 48rem;
}

body {
  font-family: Arial, Helvetica, sans-serif;
  font-size: 16px;
  line-height: 1.5;
  margin: 0;
  padding: 2rem;
  background: var(--Color-BodyBG);
  color: var(--Color-BodyFG);
  overflow-y: scroll;
  overflow-x: auto;
  min-width: 600px;
}

textarea,
button,
input {
  font: inherit;
  box-sizing: border-box;
  margin: 0;
}

textarea::-moz-focus-inner,
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

main {
  margin: 0 auto;
  max-width: var(--Content-Width);
}

.Flex-Row {
  display: flex;
  flex-direction: row;
}

.Flex-Column {
  display: flex;
  flex-direction: column;
}

.Flex-Auto {
  flex: 1 1 auto;
}

.Table {
  width: 100%;
  table-layout: fixed;
  border-collapse: collapse;
}

.Link-Black {
  color: var(--Color-Link);
}

.Link-Black:hover {
  color: var(--Color-LinkHover);
}

.Th {
  font-weight: normal;
  text-align: left;
}

.H1 {
  font-weight: normal;
  margin: 0 auto;
  line-height: 1.25;
}

.H2 {
  font-weight: normal;
  border-top: 1px solid var(--Color-Separator);
  padding-top: 1rem;
  line-height: 1.25;
  margin: 1rem 0;
}

.H3 {
  font-weight: normal;
  line-height: 1.25;
  margin: 1rem 0;
}

.TextArea {
  /* TODO */
  min-height: calc(2 * var(--Field-Height));
  width: 100%;
  border: 1px solid var(--Color-Border);
  padding: 0.5rem;
  border-radius: 2px;
}

code,
pre,
.Monospace {
  font-family: "Input", "Menlo", monospace;
  font-size: 0.9rem;
}

.Header {
  padding: 0 2rem;
}

.Content {
  margin-left: auto;
  margin-right: auto;
  max-width: var(--Content-Width);
}

.Card {
  border-top: 1px solid var(--Color-Separator);
  padding: 1rem 0;
  margin: 1rem 0;
}

.Label-Field {
  min-width: 3rem;
  padding-right: 1rem;
  text-align: right;
}

.Field {
  display: flex;
  margin-top: 1rem;
}

.Card:last-of-type {
  border-bottom: 1px solid var(--Color-Separator);
}

.PaddingLeft {
  padding-left: 2.5rem;
}

.PaddingLeft-Separator {
  padding-left: 1rem;
}

.Logo {
  float: left;
  padding-right: 1rem;
}

.PaddingTop-Separator {
  padding-top: 1rem;
}

.Input {
  height: var(--Field-Height);
  width: 100%;
  border: 1px solid var(--Color-Border);
  padding: 0.5rem;
  border-radius: 2px;
}

.Input:hover {
  border-color: var(--Color-BorderHover);
}

.Button {
  height: var(--Field-Height);
  padding: 0.25rem 1rem;
  border: 1px solid transparent;
  background: var(--Color-ButtonBG);
  border-radius: 2px;
}

.Button:not(:disabled):hover {
  background: var(--Color-ButtonBGHover);
}

.Button:disabled {
  background: var(--Color-ButtonDisabledBG);
  color: var(--Color-ButtonDisabledFG);
}

.TextButton {
  height: var(--Field-Height);
  padding: 0.25rem 1rem;
  border: 1px solid transparent;
  background: transparent;
  border-radius: 2px;
}

.TextButton:hover {
  background-color: var(--Color-ButtonBG);
}

.Checkbox + .Label {
  padding-left: 0.5rem;
  height: var(--Field-Height);
}

.Checkbox {
  -webkit-appearance: none;
  -moz-appearance: none;
  width: var(--Field-Height);
  height: var(--Field-Height);
  border-radius: 2px;
  background: white;
  border: 1px solid var(--Color-Border);
}

.Checkbox:hover {
  border-color: var(--Color-BorderHover);
}

.Checkbox:checked {
  background-image: var(--Image-Checked);
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
}

.Label {
  height: var(--Field-Height);
  line-height: var(--Field-Height);
  user-select: none;
  display: inline-block;
}

.Label[hidden] {
  visibility: hidden;
}

.Modal[hidden] {
  pointer-events: none;
  opacity: 0;
}

.Modal[hidden] > .Modal-Body {
  transform: scale(0.98);
}

.Modal {
  transition: opacity 200ms ease;
  background: var(--Color-ModalBackdrop);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-items: start;
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
}

.Modal-Body {
  transition: transform 200ms ease;
  margin-top: var(--Field-Height);
  background: var(--Color-BodyBG);
  color: var(--Color-BodyFG);
  border-radius: 2px;
  box-shadow: 0 0 0 1px hsla(0, 0%, 0%, 0.1), 0 2px 4px hsla(0, 0%, 0%, 0.1),
    0 4px 8px hsla(0, 0%, 0%, 0.2);
  padding: 1rem;
  min-width: 600px;
  min-height: 300px;
}

.MarginV-0 {
  margin-top: 0;
  margin-bottom: 0;
}

.Color-Red {
  color: var(--Color-Red);
}

.Focus-Border:focus {
  outline: 0;
  border-color: var(--Color-Focus);
  box-shadow: inset 0 0 0 var(--Rem-1-16) var(--Color-FocusInner),
    0 0 0 var(--Rem-1-8) var(--Color-FocusOutline);
}

[v-cloak] {
  display: none;
}
